# FILE: docker-compose.yml
version: '3.8'

services:
  # Infrastructure
  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  postgres-clients:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: clients_db
      POSTGRES_USER: clients_user
      POSTGRES_PASSWORD: ${CLIENTS_DB_PASSWORD}
    volumes:
      - clients_data:/var/lib/postgresql/data

  postgres-templates:
    image: postgres:16
    environment:
      POSTGRES_DB: templates_db
      POSTGRES_USER: templates_user
      POSTGRES_PASSWORD: ${TEMPLATES_DB_PASSWORD}
    volumes:
      - templates_data:/var/lib/postgresql/data

  mysql-auth:
    image: mysql:8
    environment:
      MYSQL_DATABASE: catalogu_vectordbdev
      MYSQL_USER: catalogu_agent-chassis
      MYSQL_PASSWORD: ${AUTH_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - auth_data:/var/lib/mysql

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data

  # Core Services
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile.auth-service
    environment:
      AUTH_DB_PASSWORD: ${AUTH_DB_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    depends_on:
      - mysql-auth
    ports:
      - "8081:8081"

  core-manager:
    build:
      context: .
      dockerfile: Dockerfile.core-manager
    environment:
      CLIENTS_DB_PASSWORD: ${CLIENTS_DB_PASSWORD}
      TEMPLATES_DB_PASSWORD: ${TEMPLATES_DB_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    depends_on:
      - postgres-clients
      - postgres-templates
      - kafka
    ports:
      - "8088:8088"

  # Agent Services
  agent-chassis:
    build:
      context: .
      dockerfile: Dockerfile.agent-chassis
    environment:
      CLIENTS_DB_PASSWORD: ${CLIENTS_DB_PASSWORD}
      TEMPLATES_DB_PASSWORD: ${TEMPLATES_DB_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    depends_on:
      - postgres-clients
      - kafka
    deploy:
      replicas: 3

  reasoning-agent:
    build:
      context: .
      dockerfile: Dockerfile.reasoning
    environment:
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    depends_on:
      - kafka

volumes:
  clients_data:
  templates_data:
  auth_data:
  minio_data: